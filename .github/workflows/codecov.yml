name: code-coverage.yml
on:
  pull_request:
    types:
      - synchronize

jobs:
  code-coverage:
    name: "Compute test coverage"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: "Install packages"
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install -y \
           libcapstone-dev \
           libopenmpi-dev \
           ninja-build \
           openmpi-bin \
           pkg-config \
           g++-13   \
           cmake
      - name: "Compile and install capio"
        env:
          CXX: g++-13
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug \
                -DCODE_COVERAGE=ON \
                -DCAPIO_LOG=ON \
                -DCAPIO_BUILD_TESTS=ON \
                -B build \
                -S ${GITHUB_WORKSPACE}
          make -j $(nproc)
          sudo cmake --install build --prefix /usr/local
      - name: "Run tests"
        id: run-tests
        timeout-minutes: 2
        env:
          CAPIO_DIR: ${{ github.workspace }}
          CAPIO_LOG_LEVEL: -1
        run: |
          export LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}"
          
          echo "Run CAPIO POSIX Unit tests"
          capio_posix_unit_tests \
          --gtest_break_on_failure \
          --gtest_print_time=1
          
          echo "Run CAPIO server Unit tests"
          capio_server_unit_tests \
          --gtest_break_on_failure \
          --gtest_print_time=1
          
          echo "Run CAPIO syscall Unit tests"
          LD_PRELOAD=libcapio_posix.so \
          capio_syscall_unit_tests \
          --gtest_break_on_failure \
          --gtest_print_time=1
          
          echo "Geerate coverage files"
          gcovr
          ls
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml,!./cache
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true